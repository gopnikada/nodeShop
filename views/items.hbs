<div class="container pt-5">
    <div class="raw">
        <div class="col-md-12">
            {{cat}}
            <form method="get" action="/items" class="d-flex flex-row">
                <select class="form-select" aria-label="Default select example" name="optVal">
                    <option>Allitems</option>
                    <option value="phone">Phones</option>
                    <option value="notebook">Notebooks</option>
                    <option value="pc">Computers</option>
                    <option value="mp3">MP3</option>
                    <option value="cpu">CPUs</option>
                </select>
                <input type="submit" class="btn btn-success" value="Sort">
            </form>

            <ul class="d-flex flex-wrap flex-row bg-light" style="list-style-type: none">
                {{#each items}}
                    <li class="item">
                        <a href={{link}}><div><h5>{{name}}</h5>
                        <br>
                        <img src={{image}} alt=""></div></a>
                        <form action="/basket" method="post" class="d-flex flex-row justify-content-between">
                            {{#if this.count}}
                                <input type="hidden" name="getIdInput" value={{id}}>
                                <h1>{{cost}}$</h1>
                                <input class="m-3 getCountInput" onchange="changeOrdered(this)" type="number" value="1" name="getCountInput" min="1" max="99">
                                <input class="btn btn-success m-2" type="submit" value="Купить">
                            {{else}}
                                <button class="btn btn-secondary m-2" disabled>Товар закончился</button>
                            {{/if}}
                        </form>
                    </li>
                {{/each}}
            </ul>
        </div>
    </div>
</div>
<script>
    let val
    let act
    function changeOrdered(some){

        let txt = some.parentElement.childNodes[3].textContent
        const cost = parseFloat(txt)
        const mock = JSON.stringify(JSON.parse(cost))
        if(val==undefined){
            val=mock
            some.parentElement.childNodes[3].textContent = +val + +val
            act = parseFloat(some.parentElement.childNodes[3].textContent)
        }else{
            some.parentElement.childNodes[3].textContent = +act + +val
            act = parseFloat(some.parentElement.childNodes[3].textContent)
        }//todo other items to buy



        console.log(mock)

    }
</script>